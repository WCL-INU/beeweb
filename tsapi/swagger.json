{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "REST API",
    "description": ""
  },
  "host": "localhost:3000",
  "basePath": "/",
  "schemes": [
    "http"
  ],
  "paths": {
    "/hello": {
      "get": {
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/areahive": {
      "get": {
        "tags": [
          "Legacy"
        ],
        "description": "Endpoint to fetch all area hives",
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/inout": {
      "get": {
        "tags": [
          "Legacy"
        ],
        "description": "Fetch inout data in legacy format (from sensor_data2)",
        "parameters": [
          {
            "name": "deviceId",
            "description": "Device ID",
            "required": true,
            "in": "query",
            "type": "string"
          },
          {
            "name": "sTime",
            "description": "Start time (ISO 8601, e.g. 2025-05-04T14:13:00Z)",
            "required": true,
            "in": "query",
            "type": "string"
          },
          {
            "name": "eTime",
            "description": "End time (ISO 8601, e.g. 2025-05-11T14:13:00Z)",
            "required": true,
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/login": {
      "post": {
        "tags": [
          "Legacy"
        ],
        "description": "Login forwarding to user route",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/devicetypes": {
      "get": {
        "tags": [
          "Legacy"
        ],
        "description": "Forward device types requests to device route",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/sensor": {
      "get": {
        "tags": [
          "Legacy"
        ],
        "description": "Fetch sensor data in legacy format (from sensor_data2)",
        "parameters": [
          {
            "name": "deviceId",
            "description": "Device ID",
            "required": true,
            "in": "query",
            "type": "string"
          },
          {
            "name": "sTime",
            "description": "Start time (ISO 8601, e.g. 2025-05-04T14:13:00Z)",
            "required": true,
            "in": "query",
            "type": "string"
          },
          {
            "name": "eTime",
            "description": "End time (ISO 8601, e.g. 2025-05-11T14:13:00Z)",
            "required": true,
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/camera": {
      "get": {
        "tags": [
          "Legacy"
        ],
        "description": "Forward camera requests to data route",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/uplink": {
      "post": {
        "tags": [
          "Legacy"
        ],
        "description": "Uplink adapter for legacy to sensor2 format",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/upload": {
      "post": {
        "tags": [
          "Legacy"
        ],
        "description": "Upload adapter for legacy format to sensor2 format",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "example": "any"
                },
                "data": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/device/types": {
      "get": {
        "tags": [
          "Device"
        ],
        "description": "Endpoint to fetch all device types",
        "responses": {
          "200": {
            "description": "Device types fetched successfully"
          },
          "500": {
            "description": "Failed to fetch device types"
          }
        }
      }
    },
    "/device/": {
      "get": {
        "tags": [
          "Device"
        ],
        "description": "Endpoint to fetch all devices or devices by Hive ID or Device ID",
        "parameters": [
          {
            "name": "hiveId",
            "description": "Hive ID",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "deviceId",
            "description": "Device ID like ( 13,21,33 or 22 )",
            "required": false,
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Devices fetched successfully"
          },
          "400": {
            "description": "Missing required fields"
          },
          "404": {
            "description": "No devices found"
          },
          "500": {
            "description": "Failed to fetch devices"
          }
        }
      },
      "post": {
        "tags": [
          "Device"
        ],
        "description": "Endpoint to create a new device",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "Device 1"
                },
                "hiveId": {
                  "type": "number",
                  "example": 1
                },
                "typeId": {
                  "type": "number",
                  "example": 3
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Device already exists"
          },
          "201": {
            "description": "Device created successfully"
          },
          "400": {
            "description": "Missing required fields"
          },
          "500": {
            "description": "Failed to create device"
          }
        }
      },
      "put": {
        "tags": [
          "Device"
        ],
        "description": "Endpoint to update a device",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "deviceId": {
                  "type": "number",
                  "example": 7
                },
                "name": {
                  "type": "string",
                  "example": "Device 2"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Device updated successfully"
          },
          "400": {
            "description": "No fields to update"
          },
          "404": {
            "description": "Updateble Device not found"
          },
          "500": {
            "description": "Failed to update device"
          }
        }
      },
      "delete": {
        "tags": [
          "Device"
        ],
        "description": "Endpoint to delete a device",
        "parameters": [
          {
            "name": "deviceId",
            "description": "Device ID",
            "required": true,
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Device deleted successfully"
          },
          "400": {
            "description": "Missing required fields"
          },
          "404": {
            "description": "Deletable device not found"
          },
          "500": {
            "description": "Failed to delete device"
          }
        }
      }
    },
    "/hive/": {
      "get": {
        "tags": [
          "Hive"
        ],
        "description": "Endpoint to fetch all hives or hives by Hive ID or Area ID",
        "parameters": [
          {
            "name": "areaId",
            "description": "Area ID",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "hiveId",
            "description": "Hive ID like ( 13,21,33 or 22 )",
            "required": false,
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Hives fetched successfully"
          },
          "400": {
            "description": "Missing required fields"
          },
          "404": {
            "description": "No hives found"
          },
          "500": {
            "description": "Failed to fetch hives"
          }
        }
      },
      "post": {
        "tags": [
          "Hive"
        ],
        "description": "Endpoint to create a new hive",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "Hive 10"
                },
                "areaId": {
                  "type": "number",
                  "example": 1
                }
              },
              "required": [
                "name",
                "areaId"
              ]
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Hive created successfully"
          },
          "400": {
            "description": "Missing required fields"
          },
          "409": {
            "description": "Hive already exists"
          },
          "500": {
            "description": "Failed to create hive"
          }
        }
      },
      "put": {
        "tags": [
          "Hive"
        ],
        "description": "Endpoint to update a hive",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "hiveId": {
                  "type": "number",
                  "example": 7
                },
                "name": {
                  "type": "string",
                  "example": "Hive 20"
                },
                "areaId": {
                  "type": "number",
                  "example": 2
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Hive updated successfully"
          },
          "400": {
            "description": "No fields to update"
          },
          "404": {
            "description": "Updateble Hive not found"
          },
          "500": {
            "description": "Failed to update hive"
          }
        }
      },
      "delete": {
        "tags": [
          "Hive"
        ],
        "description": "Endpoint to delete a hive",
        "parameters": [
          {
            "name": "hiveId",
            "description": "Hive ID",
            "required": true,
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Hive deleted successfully"
          },
          "400": {
            "description": "Missing required fields"
          },
          "404": {
            "description": "Deletable hive not found"
          },
          "500": {
            "description": "Failed to delete hive"
          }
        }
      }
    },
    "/area/": {
      "get": {
        "tags": [
          "Area"
        ],
        "description": "Endpoint to fetch all areas or areas by Area ID",
        "parameters": [
          {
            "name": "areaId",
            "description": "Area ID like ( 13,21,33 or 22 or Undefined)",
            "required": false,
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Areas fetched successfully"
          },
          "404": {
            "description": "No areas found"
          },
          "500": {
            "description": "Failed to fetch areas"
          }
        }
      },
      "post": {
        "tags": [
          "Area"
        ],
        "description": "Endpoint to add a new area",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "테스트"
                },
                "location": {
                  "type": "string",
                  "example": "37.375, 126.633"
                }
              },
              "required": [
                "name",
                "location"
              ]
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Area added successfully"
          },
          "400": {
            "description": "Bad Request: Missing required fields"
          },
          "409": {
            "description": "Area already exists"
          },
          "500": {
            "description": "Failed to add area"
          }
        }
      },
      "put": {
        "tags": [
          "Area"
        ],
        "description": "Endpoint to update an area",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "areaId": {
                  "type": "number",
                  "example": 4
                },
                "name": {
                  "type": "string",
                  "example": "테스트2"
                },
                "location": {
                  "type": "string",
                  "example": "99.375, 999.633"
                }
              },
              "required": [
                "areaId",
                "name",
                "location"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Area updated successfully"
          },
          "400": {
            "description": "Bad Request: Missing required fields"
          },
          "404": {
            "description": "Area not found"
          },
          "500": {
            "description": "Failed to update area"
          }
        }
      },
      "delete": {
        "tags": [
          "Area"
        ],
        "description": "Endpoint to delete an area",
        "parameters": [
          {
            "name": "areaId",
            "description": "Area ID",
            "required": true,
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Area deleted successfully"
          },
          "400": {
            "description": "Bad Request: Missing required fields"
          },
          "404": {
            "description": "Area not found"
          },
          "500": {
            "description": "Failed to delete area"
          }
        }
      }
    },
    "/user/login": {
      "post": {
        "tags": [
          "User"
        ],
        "description": "Endpoint to login a user",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "example": "user1"
                },
                "pw": {
                  "type": "string",
                  "example": "password"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User logged in successfully"
          },
          "400": {
            "description": "Missing required fields"
          },
          "401": {
            "description": "Invalid credentials"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/user/{id}": {
      "get": {
        "tags": [
          "User"
        ],
        "description": "Endpoint to fetch a user by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "User fetched successfully"
          },
          "400": {
            "description": "Missing required fields"
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/data/sensor2": {
      "get": {
        "tags": [
          "Sensor2"
        ],
        "description": "Fetch sensor or inout data by type and time range",
        "parameters": [
          {
            "name": "deviceId",
            "description": "Device ID",
            "required": true,
            "in": "query",
            "type": "string"
          },
          {
            "name": "sTime",
            "description": "Start time (ISO 8601, e.g. 2025-05-04T14:13:00Z)",
            "required": true,
            "in": "query",
            "type": "string"
          },
          {
            "name": "eTime",
            "description": "End time (ISO 8601, e.g. 2025-05-11T14:13:00Z)",
            "required": true,
            "in": "query",
            "type": "string"
          },
          {
            "name": "dataTypes",
            "description": "Comma-separated data types (e.g. 2,3,4)",
            "required": true,
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/data/uplink": {
      "post": {
        "tags": [
          "Sensor2"
        ],
        "description": "Upload a single data record from device",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "example": 1
                },
                "values": {
                  "type": "object",
                  "properties": {
                    "co2": {
                      "type": "number",
                      "example": 450
                    },
                    "out_field": {
                      "type": "number",
                      "example": 3
                    }
                  },
                  "required": [
                    "co2",
                    "out_field"
                  ]
                }
              },
              "required": [
                "id"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/data/upload": {
      "post": {
        "tags": [
          "Sensor2"
        ],
        "description": "Upload a batch of sensor/inout data with timestamps",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "device_id": {
                        "type": "number",
                        "example": 1
                      },
                      "time": {
                        "type": "string",
                        "example": "2025-05-11T13:30:00Z"
                      },
                      "values": {
                        "type": "object",
                        "properties": {
                          "temp": {
                            "type": "number",
                            "example": 25.5
                          },
                          "humi": {
                            "type": "number",
                            "example": 60
                          }
                        },
                        "required": [
                          "temp",
                          "humi"
                        ]
                      }
                    },
                    "required": [
                      "device_id"
                    ]
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }
  }
}